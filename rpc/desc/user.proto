syntax = "proto3";

// User message

message UserInfo {
  optional string id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional uint32 status = 4;
  optional string username = 5;
  optional string password = 6;
  optional string nickname = 7;
  optional string description = 8;
  optional string home_path = 9;
  repeated uint64 role_ids = 10;
  optional string mobile = 11;
  optional string email = 12;
  optional string avatar = 13;
  optional uint64 department_id = 14;
  repeated uint64 position_ids = 15;
  repeated string role_codes = 16;
  repeated string role_name = 17;
  optional string department_name = 18;
  optional string locale = 19;
}

message UserListResp {
  uint64 total = 1;
  repeated UserInfo data = 2;
}

message UserListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string username = 3;
  optional string nickname = 4;
  optional string email = 5;
  optional string mobile = 6;
  repeated uint64 role_ids = 7;
  optional uint64 department_id = 8;
  repeated uint64 position_ids = 9;
  optional string description = 10;
}

message UsernameReq {
  string username = 1;
}

service Core {
  // User management
  // group: user
  rpc createUser (UserInfo) returns (BaseUUIDResp);
  // group: user
  rpc updateUser (UserInfo) returns (BaseResp);
  // group: user
  rpc getUserList (UserListReq) returns (UserListResp);
  // group: user
  rpc getUserById (UUIDReq) returns (UserInfo);
  // group: user
  rpc getUserByUsername (UsernameReq) returns (UserInfo);
  // group: user
  rpc deleteUser (UUIDsReq) returns (BaseResp);
}