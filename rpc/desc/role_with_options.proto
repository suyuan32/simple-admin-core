syntax = "proto3";

package core;

import "google/api/annotations.proto";
import "go_zero/options.proto";
import "base.proto";

option go_package = "./core";

// File-level API metadata
option (go_zero.api_info) = {
  title: "Role Management API"
  desc: "Role management and permission control"
  author: "Ryan Su"
  email: "yuansu.china.work@gmail.com"
  version: "v1.0"
};

// Role message
message RoleInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional uint32 status = 4;
  optional string name = 5;
  optional string code = 6;
  optional string remark = 7;
  optional uint32 sort = 8;
}

message RoleListResp {
  uint64 total = 1;
  repeated RoleInfo data = 2;
}

message RoleListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string name = 3;
  optional string code = 4;
}

service Core {
  // Service-level options (apply to all methods unless overridden)
  option (go_zero.jwt) = "Auth";
  option (go_zero.middleware) = "Authority";
  option (go_zero.group) = "role";

  // Role management

  // Create role information | 创建角色
  rpc createRole (RoleInfo) returns (BaseIDResp) {
    option (google.api.http) = {
      post: "/role/create"
      body: "*"
    };
  }

  // Update role information | 更新角色
  rpc updateRole (RoleInfo) returns (BaseResp) {
    option (google.api.http) = {
      post: "/role/update"
      body: "*"
    };
  }

  // Delete role information | 删除角色信息
  rpc deleteRole (IDsReq) returns (BaseResp) {
    option (google.api.http) = {
      post: "/role/delete"
      body: "*"
    };
  }

  // Get role list | 获取角色列表
  rpc getRoleList (RoleListReq) returns (RoleListResp) {
    option (google.api.http) = {
      post: "/role/list"
      body: "*"
    };
  }

  // Get Role by ID | 通过ID获取角色
  rpc getRoleById (IDReq) returns (RoleInfo) {
    option (google.api.http) = {
      post: "/role"
      body: "*"
    };
  }
}
